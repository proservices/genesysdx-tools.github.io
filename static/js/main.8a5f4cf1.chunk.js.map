{"version":3,"sources":["navigation/Index.jsx","import/Index.jsx","export/Index.jsx","instructions/Index.jsx","home/Index.jsx","App.js","reportWebVitals.js","common/theme.js","index.js"],"names":["Navigation","color","ListItem","component","Link","to","button","ListItemIcon","style","fill","ListItemText","primary","Divider","React","Component","axios","require","default","validationSchema","yup","account","required","kb","apiKey","ImportForm","formik","useFormik","initialValues","file","onSubmit","values","post","columns","ignoreFirstHeaderRow","action","then","response","console","log","catch","error","handleSubmit","Stack","spacing","TextField","fullWidth","id","name","label","value","onChange","handleChange","touched","Boolean","errors","helperText","accept","type","Button","variant","ExportForm","alert","JSON","stringify","TabPanel","props","children","index","other","role","hidden","Box","sx","p","Typography","a11yProps","BasicTabs","useState","setValue","width","borderBottom","borderColor","Tabs","event","newValue","Tab","Home","App","AppBar","styled","MuiAppBar","shouldForwardProp","prop","theme","open","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","Drawer","MuiDrawer","position","whiteSpace","background","palette","secondary","main","typography","navigation","size","fontSize","boxSizing","overflowX","breakpoints","up","setOpen","toggleDrawer","display","CssBaseline","Toolbar","pr","IconButton","edge","onClick","marginRight","noWrap","flexGrow","alt","src","alignItems","justifyContent","px","List","backgroundColor","mode","grey","height","overflow","Container","maxWidth","mt","mb","Grid","container","item","xs","Paper","flexDirection","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","common","navColor","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.8a5f4cf1.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport HomeIcon from '@mui/icons-material/Home';\nimport UploadIcon from '@mui/icons-material/UploadFile';\nimport ExportIcon from '@mui/icons-material/CloudDownloadOutlined';\nimport HelpIcon from '@mui/icons-material/HelpCenterOutlined';\nimport Divider from '@mui/material/Divider';\nimport {\n  Link\n} from \"react-router-dom\";\n\nexport default class Navigation extends React.Component {\n  render() {\n    return (\n      <Fragment>  \n        <div color=\"white\">\n          <ListItem component={Link} to={'/'} button>\n            <ListItemIcon>\n              <HomeIcon style={{fill: \"white\"}} />\n            </ListItemIcon>\n              <ListItemText primary=\"Home\" />\n          </ListItem>\n          <ListItem component={Link} to={'/import'} button>\n            <ListItemIcon>\n              <UploadIcon style={{fill: \"white\"}}/>\n            </ListItemIcon>\n              <ListItemText primary=\"Import Content\" />\n          </ListItem>\n          <ListItem component={Link} to={'/export'} button>\n            <ListItemIcon>\n              <ExportIcon style={{fill: \"white\"}} />\n            </ListItemIcon>\n              <ListItemText primary=\"Export Content\" />\n          </ListItem>\n          <Divider />\n          <ListItem component={Link} to={'/instructions'} button>\n            <ListItemIcon>\n              <HelpIcon style={{fill: \"white\"}} />\n            </ListItemIcon>\n              <ListItemText primary=\"Help\" />\n          </ListItem>\n        </div>\n      </Fragment>\n    );\n  }\n};\n\n\n","import React from 'react';\nimport { TextField,Stack,Button} from '@mui/material';\nimport { useFormik} from 'formik';\nimport * as yup from 'yup';\n\n\nconst axios = require('axios').default;\n\nconst validationSchema = yup.object({\n  account: yup\n    .string('Enter your account name')\n    .required('account name is required'),\n    kb: yup\n    .string('Enter your Knowledge Base Name')\n    .required('Knowledge Base is required'),\n    apiKey: yup\n    .string('Enter your API Key')\n    .required('API Key is required'),\n\n});\n\n const ImportForm = () => {\n  const formik = useFormik({\n    initialValues: {\n      account: '',\n      kb: '',\n      apiKey: '',\n      file: null\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n     //alert(JSON.stringify(values, null, 2));\n\n     let axiosConfig = {\n        headers: {\n          \"Access-Control-Allow-Headers\": \"*\"\n        }\n      };\n\n      axios.post(`https://${values.account}.nanorep.co/api/kb/v1/import`, {\n        account: values.account,\n        kb: values.kb,\n        apiKey: values.apiKey,\n        file: values.file,\n        columns: \"title,answer,label,phrasing\",\n        ignoreFirstHeaderRow: true,\n        action: 'import'\n      })\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    },\n  });\n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n      <Stack spacing={3}>\n      <h2>Import</h2>\n        <TextField\n          fullWidth\n          id=\"account\"\n          name=\"account\"\n          label=\"Account\"\n          value={formik.values.account}\n          onChange={formik.handleChange}\n          error={formik.touched.account && Boolean(formik.errors.account)}\n          helperText={formik.touched.account && formik.errors.account}\n        />\n        <TextField\n          fullWidth\n          id=\"Knowledge Base\"\n          name=\"kb\"\n          label=\"Knowledge Base\"\n          value={formik.values.kb}\n          onChange={formik.handleChange}\n          error={formik.touched.kb && Boolean(formik.errors.kb)}\n          helperText={formik.touched.kb && formik.errors.kb}\n        />\n        <TextField\n          fullWidth\n          id=\"API Key\"\n          name=\"apiKey\"\n          label=\"API Key\"\n          value={formik.values.apiKey}\n          onChange={formik.handleChange}\n          error={formik.touched.apiKey && Boolean(formik.errors.apiKey)}\n          helperText={formik.touched.apiKey && formik.errors.apiKey}\n        />\n        <input accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\" id=\"file\" name=\"file\" type=\"file\" onChange={formik.handleChange}/>\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Submit\n        </Button>\n        </Stack>\n      </form>\n    </div>\n  );\n};\nexport default ImportForm;\n","import React from 'react';\nimport { useFormik} from 'formik';\nimport * as yup from 'yup';\nimport { TextField,Stack,Button} from '@mui/material';\n\n\nconst validationSchema = yup.object({\n  account: yup\n    .string('Enter your account name')\n    .required('account name is required'),\n    kb: yup\n    .string('Enter your Knowledge Base Name')\n    .required('Knowledge Base is required'),\n    apiKey: yup\n    .string('Enter your API Key')\n    .required('API Key is required'),\n\n});\n\n const ExportForm = () => {\n  const formik = useFormik({\n    initialValues: {\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n      <Stack spacing={3}>\n      <h2>Export</h2>\n        <TextField\n          fullWidth\n          id=\"account\"\n          name=\"account\"\n          label=\"account\"\n          value={formik.values.account}\n          onChange={formik.handleChange}\n          error={formik.touched.account && Boolean(formik.errors.account)}\n          helperText={formik.touched.account && formik.errors.account}\n        />\n        <TextField\n          fullWidth\n          id=\"Knowledge Base\"\n          name=\"kb\"\n          label=\"Knowledge Base\"\n          value={formik.values.kb}\n          onChange={formik.handleChange}\n          error={formik.touched.kb && Boolean(formik.errors.kb)}\n          helperText={formik.touched.kb && formik.errors.kb}\n        />\n        <TextField\n          fullWidth\n          id=\"API Key\"\n          name=\"apiKey\"\n          label=\"API Key\"\n          value={formik.values.apiKey}\n          onChange={formik.handleChange}\n          error={formik.touched.apiKey && Boolean(formik.errors.apiKey)}\n          helperText={formik.touched.apiKey && formik.errors.apiKey}\n        />\n        <input accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\" id=\"file\" name=\"file\" type=\"file\" onChange={formik.handleChange}/>\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Submit\n        </Button>\n        </Stack>\n      </form>\n    </div>\n  );\n};\nexport default ExportForm;","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport Box from '@mui/material/Box';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function BasicTabs() {\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Fragment>\n      <h1>Help</h1>\n      <Divider />\n      <br />\n      <Box sx={{ width: '100%' }}>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\n            <Tab label=\"Import Content\" {...a11yProps(0)} />\n            <Tab label=\"Export Content\" {...a11yProps(1)} />\n            <Tab label=\"Resources\" {...a11yProps(2)} />\n          </Tabs>\n        </Box>\n        <TabPanel value={value} index={0}>\n          Item One\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          Item Two\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          Item Three\n        </TabPanel>\n      </Box>\n    </Fragment>\n  );\n}","import React, { Fragment } from \"react\";\n\nexport default class Home extends React.Component {\n\n  render() {\n    return (\n      <Fragment>\n        <h2>Home</h2>\n      </Fragment>\n    );\n  }\n};","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MuiDrawer from '@mui/material/Drawer';\nimport Box from '@mui/material/Box';\nimport MuiAppBar from '@mui/material/AppBar';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport Toolbar from '@mui/material/Toolbar';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport HelpIcon from '@mui/icons-material/HelpOutlined';\nimport Navigation from './navigation/Index.jsx';\nimport { styled } from '@mui/material/styles';\nimport Import from './import/Index.jsx';\nimport Export from './export/Index.jsx';\nimport Instructions from './instructions/Index.jsx';\nimport Home from './home/Index.jsx';\n\nexport default function App() {\n  const drawerWidth = 215;\n\n  const AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n  })(({ theme, open }) => ({\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    }),\n  }));\n  \n  const Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n    ({ theme, open }) => ({\n      '& .MuiDrawer-paper': {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        background: theme.palette.secondary.main,\n        width: drawerWidth,\n        color: theme.typography.navigation.color,\n        size: theme.typography.navigation.fontSize,\n        transition: theme.transitions.create('width', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n        boxSizing: 'border-box',\n        ...(!open && {\n          overflowX: 'hidden',\n          transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen, \n          }),\n          width: theme.spacing(7),\n          [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n          },\n        }),\n      },\n    }),\n  );\n\n  const [open, setOpen] = React.useState(false);\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <Router>\n      <Box sx={{ display: 'flex' }}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" open={open}>\n          <Toolbar\n            sx={{\n              pr: '24px', // keep right padding when drawer closed\n            }}\n          >\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={toggleDrawer}\n              sx={{\n                marginRight: '36px',\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              sx={{ flexGrow: 1 }}\n            >\n              <img alt=\"logo\" src=\"genesys-logo-base.svg\"/>\n            </Typography>\n            <IconButton component={Link} to={'/instructions'} color=\"inherit\">\n                <HelpIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <Drawer variant=\"permanent\" open={open}>\n          <Toolbar\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'flex-end',\n              px: [1],\n            }}\n          >\n            <IconButton onClick={toggleDrawer}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </Toolbar>\n          <Divider />\n          <List>\n            <Navigation />\n          </List>\n        </Drawer>\n        <Box\n          component=\"main\"\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === 'light'\n                ? theme.palette.grey[100]\n                : theme.palette.grey[900], \n            flexGrow: 1,\n            height: '100vh',\n            overflow: 'auto',\n          }}\n        >\n          <Toolbar />\n          <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column' }}>\n                  <Switch>\n                    <Route path=\"/export\">\n                      <Export />\n                    </Route>\n                    <Route path=\"/import\">\n                      <Import />\n                    </Route>\n                    <Route path=\"/instructions\">\n                      <Instructions />\n                    </Route>\n                    <Route path=\"/\">\n                      <Home />\n                    </Route>\n                  </Switch>\n                </Paper>\n              </Grid>\n            </Grid>\n          </Container>\n        </Box>\n      </Box>\n    </Router>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@mui/material/styles';\n\nexport const theme = createTheme({\n  palette: {\n    mode: 'light',\n    primary: {\n      main: '#23395d',\n    },\n    secondary: {\n      main: '#ff4f1f',\n    },\n    common: {\n      navColor: \"blue\",\n    },\n  },\n  typography: {\n    navigation: {\n      fontSize: 18,\n      color: \"white\"\n    },\n  }\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from '@mui/material/styles';\nimport { theme } from './common/theme.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}